{"ast":null,"code":"var _jsxFileName = \"/Users/fariddzenetov/homework/homework/src/task-one/TaskOne.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './TaskOne.css';\nimport useForm from './useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskOne() {\n  _s();\n  const onSubmitHandle = formData => {\n    // Здесь вы можете обрабатывать логику отправки формы,\n    // например, вызвать ваш API для отправки данных формы\n\n    // И используйте alert, чтобы показать результат\n    alert(JSON.stringify(formData));\n  };\n  const {\n    formData,\n    handleChange,\n    handleSubmit,\n    error\n  } = useForm(onSubmitHandle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        className: \"form-input\",\n        onChange: handleChange,\n        value: formData.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        className: \"form-input\",\n        onChange: handleChange,\n        value: formData.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        className: \"form-input\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        className: \"form-input\",\n        onChange: handleChange,\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        className: \"form-input\",\n        onChange: handleChange,\n        value: formData.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskOne, \"DysdZ78hKSlYcQsIcF7gHTn63pA=\", false, function () {\n  return [useForm];\n});\n_c = TaskOne;\nexport default TaskOne;\nvar _c;\n$RefreshReg$(_c, \"TaskOne\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","TaskOne","_s","onSubmitHandle","formData","alert","JSON","stringify","handleChange","handleSubmit","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","onChange","value","firstName","lastName","email","password","confirmPassword","_c","$RefreshReg$"],"sources":["/Users/fariddzenetov/homework/homework/src/task-one/TaskOne.jsx"],"sourcesContent":["import React from 'react';\nimport './TaskOne.css';\nimport useForm from './useForm';\n\nfunction TaskOne() {\n  const onSubmitHandle = (formData) => {\n    // Здесь вы можете обрабатывать логику отправки формы,\n    // например, вызвать ваш API для отправки данных формы\n    \n    // И используйте alert, чтобы показать результат\n    alert(JSON.stringify(formData));\n  };\n\n  const { formData, handleChange, handleSubmit, error } = useForm(onSubmitHandle);\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"error-message\">{error}</div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          placeholder=\"First Name\"\n          className=\"form-input\"\n          onChange={handleChange}\n          value={formData.firstName}\n        />\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"Last Name\"\n          className=\"form-input\"\n          onChange={handleChange}\n          value={formData.lastName}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          className=\"form-input\"\n          onChange={handleChange}\n          value={formData.email}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          className=\"form-input\"\n          onChange={handleChange}\n          value={formData.password}\n        />\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          className=\"form-input\"\n          onChange={handleChange}\n          value={formData.confirmPassword}\n        />\n        <button type=\"submit\" className=\"form-button\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default TaskOne;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACA;;IAEA;IACAC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;EACjC,CAAC;EAED,MAAM;IAAEA,QAAQ;IAAEI,YAAY;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGZ,OAAO,CAACK,cAAc,CAAC;EAE/E,oBACEH,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5ChB,OAAA;MAAMiB,QAAQ,EAAER,YAAa;MAAAG,QAAA,gBAC3BZ,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,WAAW;QAChBC,WAAW,EAAC,YAAY;QACxBT,SAAS,EAAC,YAAY;QACtBU,QAAQ,EAAEb,YAAa;QACvBc,KAAK,EAAElB,QAAQ,CAACmB;MAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFhB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,WAAW;QACvBT,SAAS,EAAC,YAAY;QACtBU,QAAQ,EAAEb,YAAa;QACvBc,KAAK,EAAElB,QAAQ,CAACoB;MAAS;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFhB,OAAA;QACEkB,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBT,SAAS,EAAC,YAAY;QACtBU,QAAQ,EAAEb,YAAa;QACvBc,KAAK,EAAElB,QAAQ,CAACqB;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFhB,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBT,SAAS,EAAC,YAAY;QACtBU,QAAQ,EAAEb,YAAa;QACvBc,KAAK,EAAElB,QAAQ,CAACsB;MAAS;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFhB,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,iBAAiB;QACtBC,WAAW,EAAC,kBAAkB;QAC9BT,SAAS,EAAC,YAAY;QACtBU,QAAQ,EAAEb,YAAa;QACvBc,KAAK,EAAElB,QAAQ,CAACuB;MAAgB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFhB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE9C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACd,EAAA,CA7DQD,OAAO;EAAA,QAS0CH,OAAO;AAAA;AAAA8B,EAAA,GATxD3B,OAAO;AA+DhB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}